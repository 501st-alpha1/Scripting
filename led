#!/bin/bash
# Wrapper script for Ledger-CLI.

basedir="$(pwd)"

if [ -f "$basedir/led.conf" ]
then
  validArgs=('disable_payee_check' 'net_excludes' 'fakenet_extra_excludes'
             'sync_base_folder' 'sync_names' 'sync_folders' 'sync_accounts')
  source loadconf "$basedir" "led.conf" validArgs[@]
fi

# TODO: Make this configurable.
ledger="$basedir/main.ledger"
ofxconfig="$basedir/ofxclient.ini"

args=('--file' "$ledger" '--strict' '--explicit')

if [ "$disable_payee_check" != 1 ]
then
  args+=('--check-payees')
fi

function make_net() {
  # TODO: Make included accounts configurable?
  args+=('balance' '(^Assets' '^Liabilities)' 'and' 'not' 'budget')

  for exclude in "${net_excludes[@]}"
  do
    args+=('and' 'not' "$exclude")
  done
}

if [ "$1" == "net" ]
then
  shift

  make_net
elif [ "$1" == 'fakenet' ]
then
  shift

  make_net

  for exclude in "${fakenet_extra_excludes[@]}"
  do
    args+=('and' 'not' "$exclude")
  done
elif [ "$1" == 'watch' ]
then
  shift
  # TODO: Allow customizing this.
  fileext='ledger'
  finished=0
  inotifywait --monitor --quiet --event close_write *.$fileext | while
      # If last run finished less than 1 second ago, then skip.
      if [ $(expr $(date +%s) - $finished) -gt 1 ]
      then
        led "$@"
      fi
      finished=$(date +%s)
      read event
    do :; done # No-op
elif [ "$1" == 'dedup' ]
then
  shift
  if [ $# -eq 0 ]
  then
    tag=ofxid
    echo 'No argument given, assuming `ofxid` tag.'
  else
    tag="$1"
    shift
  fi

  output=$(PAGER='' ledger "${args[@]}" tags --values "$@" | grep "$tag" | sort | uniq -d)
  if [ "$output" == '' ]
  then
    echo "Success!  No duplicate '$tag' tags."
    exit 0
  else
    echo "Error: duplicate '$tag' tags found:"
    echo $output
  fi
elif [ "$1" == 'sync' ]
then
  shift

  args=('--ofxconfig' "$ofxconfig" '--ledger' "$ledger"
        '--unknown-account' 'Expenses:Unknown')

  # Check if next arg is sync name.
  found=0
  for (( i=0; i < "${#sync_names[@]}"; i++ ))
  do
    if [ "${sync_names[$i]}" == "$1" ]
    then
      folder="${sync_folders[$i]}"
      account="${sync_accounts[$i]}"
      found=1
    fi
  done
  if [ $found -eq 1 ]
  then
    shift

    path="$sync_base_folder/$folder"

    # Check if next arg is a year.
    if [ "$(date --date $1/1/1 +%Y)" == "$1" ]
    then
      path="$path/$1"
      shift
    fi

    filename="$path/$1"
    shift

    args+=('--account' "$account" "$filename")
  fi

  ledger-autosync "${args[@]}" "$@"

  exit $?
fi

PAGER='' ledger "${args[@]}" "$@"
