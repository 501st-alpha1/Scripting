#!/bin/bash
# Helper script to manage music and videos
# Copyright (C) 2015 Scott Weldon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

validArgs=("rootdir" "server")
source loadconf "$HOME/.scott_script/media" "config" validArgs[@]

[ -z "$rootdir" ] && echo "Root directory not defined!" && exit 1

if [ ! -d "$rootdir" ]
then
  read -p "Root directory ($rootdir) does not exist. Create it? [y/N]" response
  if [ "$response" == "Y" ] || [ "$response" == "y" ]
  then
    mkdir -p "$rootdir"
  else
    echo "Not creating root directory. Exiting..."
    exit 2
  fi
fi

cd "$rootdir"
echo "Checking existence of subdirectories (music, movies)"
if [ ! -d "$rootdir/music" ]
then
  echo "Subdir music not found, creating..."
  mkdir "$rootdir/music"
fi
if [ ! -d "$rootdir/movies" ]
then
  echo "Subdir movies not found, creating..."
  mkdir "$rootdir/movies"
fi

function sync() {
  echo "Syncing with server..."
  server $server sync-dry "$rootdir/" "$rootdir/"
  echo "If there is anything to sync, and it looks correct, please press [y/Y]"
  echo "to sync it. Otherwise, press Enter to continue."
  read -p "Press [y/Y/Enter]: " response

  if [ "$response" == "Y" ] || [ "$response" == "y" ]
  then
    server $server sync
  else
    echo "Not syncing."
  fi
}

function music() {
  echo "FIXME"
}

function movies() {
  echo "FIXME"
}

while true
do
  echo "What do you want to do?"
  echo "  1) Download music."
  echo "  2) Download movies."
  echo
  echo "  s) Sync local files to server."
  echo
  echo "  q) Quit."

  read -p "Press [1/2/s/q]: " response

  case $response in
    "1")
      music
      ;;
    "2")
      movies
      ;;
    "s")
      sync
      ;;
    "q")
      break
      ;;
    *)
      echo "Invalid option ($response). Please try again."
      ;;
  esac
done
