#!/bin/bash
# Script for the installation and management of Wine profiles.
# Copyright (C) 2013 Scott Weldon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

configfolder="$HOME/.scott_script/wine"
filename="config"
configfile="$configfolder/$filename"

year=$(date +%Y)
month=$(date +%m)
day=$(date +%d)
hour=$(date +%H)
min=$(date +%M)

validArgs=("logloc" "wineloc" "prefix" "progbin")

function usage() {
  echo "Usage: wine <command>"
  echo
  echo "Commands:"
  echo "  <program>"
  echo "  init"
  echo "  config"
  echo "  debug"
  echo
  exit 1
}

function checkpath() {
  if [ ! -d "$1" ]
  then
    mkdir -p $1
  fi
}

function loadconf() {
  if [ -e $configfile ]
  then
    echo "Loading config file."
    source ./loadconf "$configfolder" "$filename" validArgs[@]
  else
    echo "No config file found, creating one."
    checkpath $configfolder
  fi

  if [ "$logloc" == "" ]
  then
    editoption logloc
    saveconf
  fi
  if [ "$wineloc" == "" ]
  then
    editoption wineloc
    saveconf
  fi
  if [ "$prefix" == "" ]
  then
    editoption prefix
    saveconf
  fi
  if [ "$progbin" == "" ]
  then
    editoption progbin
    saveconf
  fi
}

function editoption() {
  if [ "$1" == "logloc" ]
  then
    source editconf "$configfolder" "config" "wine.xml" logloc
  elif [ "$1" == "wineloc" ]
  then
    echo "Temp! Wine location:"
    read tmp
    if [ "$tmp" != "" ]
    then
      wineloc=$tmp
    fi
  elif [ "$1" == "prefix" ]
  then
    echo "Temp! Wine Prefix:"
    read tmp
    if [ "$tmp" != "" ]
    then
      prefix=$tmp
    fi
  elif [ "$1" == "progbin" ]
  then
    echo "Temp! Wine Program Bindir:"
    read tmp
    if [ "$tmp" != "" ]
    then
      progbin=$tmp
    fi
  else
    echo "Error, wrong option for editoption(). Should never reach here."
    exit 2
  fi
  echo
}

function editconf() {
  if [ "$1" == "" ]
  then
    editoption logloc
    editoption wineloc
  else
    editoption $1
  fi

  saveconf
}

function saveconf() {
  source saveconf "Wine" "$configfolder" "$filename" validArgs[@]
  return $?
  
  #echo "declare -A programs" >> $configfile
  #for prog in "${programs[@]}"
}

function printconf() {
  echo "Contents of config file, stored at $configfile :"
  cat $configfile
  echo
}

function run() {
  progname=$1
  logfolder=$logloc/$progname
  checkpath $logfolder
  logfile=$logfolder/$year.$month.$day-$hour.$min.txt

  echo >> $logfile
  echo \# $(date +%B%e), $(date +%_Y), $(date +%_T) >> $logfile
  
  if [ "$1" == "program" ]
  then
    #cd $progbin
    WINEPREFIX=$prefix $wineloc/wine $2 >> $logfile 2>&1
  elif [ "$1" == "edit" ]
  then
    WINEPREFIX=$prefix $wineloc/wine winecfg >> $logfile 2>&1
  elif [ "$1" == "install" ]
  then
    WINEPREFIX=$prefix $wineloc/wine start "./$2" >> $logfile 2>&1
  else
    "Error, wrong option for run(). Should never reach here."
    exit 3
  fi
}

loadconf

if [ "$1" == "config" ]
then
  editconf $2
elif [ "$1" == "edit" ]
then
  run init
elif [ "$1" == "debug" ]
then
  printconf
elif [ "$1" == "run" ]
then
  run program $2
elif [ "$1" == "install" ]
then
  run "install" $2
else
  usage
fi

