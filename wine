#!/bin/bash
configfolder="$HOME/.scott_script/wine"
configfile="$configfolder/config"
year=$(date +%Y)
month=$(date +%m)
day=$(date +%d)
hour=$(date +%H)
min=$(date +%M)

function usage() {
  echo "Usage: wine <command>"
  echo
  echo "Commands:"
  echo "  <program>"
  echo "  init"
  echo "  config"
  echo "  debug"
  echo
  exit 1
}

function checkpath() {
  if [ ! -d "$1" ]
  then
    mkdir -p $1
  fi
}

function loadconf() {
  if [ -e $configfile ]
  then
    echo "Loading config file."
    source $configfile
  else
    echo "No config file found, creating one."
    checkpath $configfolder
  fi

  if [ "$logloc" == "" ]
  then
    editoption logloc
    saveconf
  fi
  if [ "$wineloc" == "" ]
  then
    editoption wineloc
    saveconf
  fi
  if [ "$prefix" == "" ]
  then
    editoption prefix
    saveconf
  fi
  if [ "$progbin" == "" ]
  then
    editoption progbin
    saveconf
  fi
}

function editoption() {
  if [ "$1" == "logloc" ]
  then
    echo "In what folder would you like the logs to be saved?"
    echo "Example: \"/var/log\""
    if [ "$logloc" == "" ]
    then
      echo "Default: \"<none yet...>\""
    else
      echo "Current: \"$logloc\""
    fi
    read tmp
    if [ "$tmp" != "" ]
    then
      logloc=$tmp
    fi
    echo "You have chosen: \"$logloc\""
  elif [ "$1" == "wineloc" ]
  then
    echo "Temp! Wine location:"
    read tmp
    if [ "$tmp" != "" ]
    then
      wineloc=$tmp
    fi
  elif [ "$1" == "prefix" ]
  then
    echo "Temp! Wine Prefix:"
    read tmp
    if [ "$tmp" != "" ]
    then
      prefix=$tmp
    fi
  elif [ "$1" == "progbin" ]
  then
    echo "Temp! Wine Program Bindir:"
    read tmp
    if [ "$tmp" != "" ]
    then
      progbin=$tmp
    fi
  else
    echo "Error, wrong option for editoption(). Should never reach here."
    exit 2
  fi
  echo
}

function editconf() {
  if [ "$1" == "" ]
  then
    editoption logloc
    editoption wineloc
  else
    editoption $1
  fi

  saveconf
}

function saveconf() {
  echo "# Wine script config file. DO NOT EDIT." > $configfile
  echo >> $configfile
  if [ "$logloc" != "" ]
  then
    echo "logloc=\"$logloc\"" >> $configfile
  fi
  if [ "$wineloc" != "" ]
  then
    echo "wineloc=\"$wineloc\"" >> $configfile
  fi
  if [ "$prefix" != "" ]
  then
    echo "prefix=\"$prefix\"" >> $configfile
  fi
  if [ "$progbin" != "" ]
  then
    echo "progbin=\"$progbin\"" >> $configfile
  fi
  #echo "declare -A programs" >> $configfile
  #for prog in "${programs[@]}"  

  echo "Configuration saved."
}

function printconf() {
  echo "Contents of config file, stored at $configfile :"
  cat $configfile
  echo
}

function run() {
  progname=$1
  logfolder=$logloc/$progname
  checkpath $logfolder
  logfile=$logfolder/$year.$month.$day-$hour.$min.txt

  echo >> $logfile
  echo \# $(date +%B%e), $(date +%_Y), $(date +%_T) >> $logfile
  
  if [ "$1" == "program" ]
  then
    WINEPREFIX=$prefix $wineloc/wine '$progbin' >> $logfile 2>&1
  elif [ "$1" == "edit" ]
  then
    WINEPREFIX=$prefix $wineloc/wine winecfg >> $logfile 2>&1
  elif [ "$1" == "install" ]
  then
    WINEPREFIX=$prefix $wineloc/wine "./$2" >> $logfile 2>&1
  else
    "Error, wrong option for run(). Should never reach here."
    exit 3
  fi
}

function installprogram() {
  installname=$1
  progname=$2

  logfile=$logloc/$progname/$year.$month.$day-$hour.$min.txt

  echo >> $logfile
  echo \# $(date +%B%e), $(date +%_Y), $(date +%_T) >> $logfile
  WINEPREFIX=$prefix $wineloc/wine '$installname' >> $logfile 2>&1

}

loadconf

if [ "$1" == "config" ]
then
  editconf $2
elif [ "$1" == "edit" ]
then
  run init
elif [ "$1" == "debug" ]
then
  printconf
elif [ "$1" == "run" ]
then
  run program $2
elif [ "$1" == "install" ]
then
  run "install" $2
else
  usage
fi

