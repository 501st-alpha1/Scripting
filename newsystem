#!/bin/bash
# Helper script to transfer setup to new system.
# Copyright (C) 2013-2015 Scott Weldon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

################################################################################
#                             Argument Parsing                                 #
################################################################################

function usage() {
  echo "You lose!"
  exit 1
}

if [ $# -eq 0 ]
then
  echo "No arguments passed. Running everything."
else
  while [ $# -gt 0 ]
  do
    case "$1" in
      "--help")
        usage
        ;;
      "-h")
        usage
        ;;
      *)
        # TODO: Parse args
        echo "Argument parsing not yet implemented."
        ;;
    esac
    shift
  done
fi

################################################################################
#                              Bashrc Linkage                                  #
################################################################################

bashrc="$HOME/.bashrc"

path=`pwd`
read -p "Detected path to this repo as $path. Is this correct? [Y/n] " response
if [ ! -z "$response" ] && [ "$response" != "Y" ] && [ "$response" != "y" ]
then
    echo "Failed to auto-detect path. Exiting."
    exit 1
fi

output="
################################################################################
#                                                                              #
#                     Custom Stuff via Scott's Scripts                         #
#                                                                              #
################################################################################

. $path/bashrc"

echo "Bashrc:"

if [ -f "$bashrc" ]
then
  check=`cat "$bashrc" | grep "Custom Stuff via Scott's Scripts"`

  if [ -n "$check" ]
  then
    echo "  The bashrc has already been linked on this system! Skipping.."
  else
    echo "$output" >> "$bashrc"
    echo "  Bashrc has been linked."
  fi
else
  echo "  User's bashrc file (\"$bashrc\") does not exist! Skipping.."
fi

unset bashrc output check

################################################################################
#                                 Git Stuff                                    #
################################################################################

function gitConfig() {
  configname="$1"
  configval="$2"
  previous="`git config --get $configname`"

  if [ -z "$previous" ]
  then
    git config --global "$configname" "$configval"
    echo "  $configname set."
  else
    echo "  $configname is already set to $previous."
  fi
}

echo "Git:"

if [ `command -v git` ]
then
  read -p "What is your full name? " name
  read -p "What is your email address? " email

  gitConfig "user.name" "$name"
  gitConfig "user.email" "$email"
  gitConfig "color.ui" "auto"
  gitConfig "format.suffix" ".txt"
  gitConfig "alias.wdiff" "diff --color-words"
  gitConfig "push.default" "simple"

  ### Hub ###
  if [ ! -d "../hub" ]
  then
    /usr/bin/git clone git@github.com:github/hub.git ../hub
  fi
else
  echo "  Error: git not installed! Skipping.."
fi

################################################################################
#                                 GRUB Stuff                                   #
################################################################################

# Fix backlight controls
config="/etc/default/grub"
optionname='GRUB_CMDLINE_LINUX="'
contents="quiet splash acpi_osi=Linux acpi_backlight=vendor"
line="${optionname}${contents}\""
grubcmd=`cat "$config" | grep "$line"`

echo "GRUB:"

if [ -z "$grubcmd" ]
then
  read -p "  Permission required to modify $config, continue? [Y/n] " response
  if [ -z "$response" ] || [ "$response" == "Y" ] || [ "$response" == "y" ]
  then
    sudo sed --in-place s:"$optionname":\&"$contents": /etc/default/grub
    echo "  Backlight stuff added to $config"
  else
    echo "  Skipping backlight stuff."
  fi
else
  echo "  GRUB_CMDLINE_LINUX already set."
fi
