#!/bin/bash
# Helper script to transfer setup to new system.
# Copyright (C) 2013 Scott Weldon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

################################################################################
#                              Bashrc Linkage                                  #
################################################################################

bashrc="$HOME/.bashrc"

output="
################################################################################
#                                                                              #
#                     Custom Stuff via Scott's Scripts                         #
#                                                                              #
################################################################################

. /mnt/data/Scripts/scott_script/bashrc"

check=`cat "$bashrc" | grep "Custom Stuff via Scott's Scripts"`

if [ -n "$check" ]
then
  echo "The bashrc has already been linked on this system! Skipping.."
else
  echo "$output" >> "$bashrc"
  echo "Bashrc has been linked."
fi

unset bashrc output check

################################################################################
#                                 Git Stuff                                    #
################################################################################

function gitConfig() {
  configname="$1"
  configval="$2"
  previous="`git config --get $configname`"
  
  if [ -z "$previous" ]
  then
    git config --global "$configname" "$configval"
    echo "Git: $configname set."
  else
    echo "Git: $configname is already set to $previous."
  fi
}

name="Scott Weldon"
email="scott@scott-weldon.com"

gitConfig "user.name" "$name"
gitConfig "user.email" "$email"
gitConfig "color.ui" "auto"
gitConfig "format.suffix" ".txt"

################################################################################
#                                 GRUB Stuff                                   #
################################################################################

# Fix backlight controls
config="/etc/default/grub"
optionname='GRUB_CMDLINE_LINUX="'
contents="quiet splash acpi_osi=Linux acpi_backlight=vendor"
line="${optionname}${contents}\""
grubcmd=`cat "$config" | grep "$line"`

if [ -z "$grubcmd" ]
then
  read -p "Permission required to modify $config, continue? [Y/n] " response
  if [ -z "$response" ] || [ "$response" == "Y" ] || [ "$response" == "y" ]
  then
    sudo sed --in-place s:"$optionname":\&"$contents": /etc/default/grub
    echo "Backlight stuff added to $config"
  else
    echo "Skipping backlight stuff."
  fi
else
  echo "GRUB_CMDLINE_LINUX already set."
fi

