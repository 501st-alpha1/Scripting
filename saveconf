#!/bin/bash
# Helper script to save config files.
# Copyright (C) 2013-2015 Scott Weldon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Usage: source saveconf <name> <folder> <file> <arglist>
# <name> is the name of the script whose config file is being saved.
# <folder> is the folder where the config file is stored.
# <file> is the name of the config file.
# <arglist> is an array of the variable names to be saved.
# If the array is called "arr", pass it as "arr[@]".
# Note that the script *must* be called using the source command.
name=$1
configfolder=$2
configfile=$3
file=$configfolder/$configfile

if [ "$4" != "" ]
then
  declare -a validArgs=("${!4}")
else
  echo "Nothing to save!"
  return 1
fi

# Check if array contains an element.
# $1 is the element to check for.
# $2 is the array.
function containsElement () {
  local e
  for e in "${@:2}"
  do [[ "$e" == "$1" ]] && return 0
  done
  return 1
}

echo "# $name script config file. DO NOT EDIT." > $file
echo >> $file
for var in ${validArgs[*]}
do
  if [ "$var" != "" ]
  then
    echo "$var=\"${!var}\"" >> $file
  fi
done

echo "Configuration saved."
